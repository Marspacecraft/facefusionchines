from typing import Any, Dict, Optional

WORDING : Dict[str, Any] =\
{
	'conda_not_activated': 'Conda 未激活',
	'python_not_supported': 'Python 版本不支持，请升级到 {version} 以上',
	'curl_not_installed': 'CURL 未安装',
	'ffmpeg_not_installed': 'FFMpeg 未安装',
	'creating_temp': '正在创建临时资源',
	'extracting_frames': '正在解压分辨率为 {resolution} 和每秒帧率为 {fps} 的帧',
	'extracting_frames_succeed': '解压帧成功',
	'extracting_frames_failed': '解压帧失败',
	'analysing': '分析中',
	'extracting': '提取中',
	'streaming': '串流中',
	'processing': '处理中',
	'merging': '合并中',
	'downloading': '下载中',
	'temp_frames_not_found': '临时帧未找到',
	'copying_image': '正在复制分辨率为 {resolution} 的图像',
	'copying_image_succeed': '复制图像成功',
	'copying_image_failed': '复制图像失败',
	'finalizing_image': '正在定稿分辨率为 {resolution} 的图像',
	'finalizing_image_succeed': '定稿图像成功',
	'finalizing_image_skipped': '跳过定稿图像',
	'merging_video': '正在合并分辨率为 {resolution} 和每秒帧率为 {fps} 的视频',
	'merging_video_succeed': '合并视频成功',
	'merging_video_failed': '合并视频失败',
	'skipping_audio': '正在跳过音频',
	'replacing_audio_succeed': '替换音频成功',
	'replacing_audio_skipped': '跳过替换音频',
	'restoring_audio_succeed': '恢复音频成功',
	'restoring_audio_skipped': '跳过恢复音频',
	'clearing_temp': '正在清理临时资源',
	'processing_stopped': '处理已停止',
	'processing_image_succeed': '处理图像成功，时间为 {seconds} 秒',
	'processing_image_failed': '处理图像失败',
	'processing_video_succeed': '处理视频成功，时间为 {seconds} 秒',
	'processing_video_failed': '处理视频失败',
	'choose_image_source': '为原始文件选则一个图像',
	'choose_audio_source': '为原始文件选择一个音频',
	'choose_video_target': '为目标文件选择一个视频',
	'choose_image_or_video_target': '为目标文件选择一个图像或视频',
	'specify_image_or_video_output': '指定输出音频或视频的文件夹',
	'match_target_and_output_extension': '匹配目标和输出的扩展名',
	'no_source_face_detected': '未检测到原始文件的脸部',
	'processor_not_loaded': '无法加载处理器 {frame_processor}',
	'processor_not_implemented': '未正确实现处理器 {frame_processor}',
	'ui_layout_not_loaded': '无法加载 UI 布局 {ui_layout}',
	'ui_layout_not_implemented': '未正确实现 UI 布局 {ui_layout}',
	'stream_not_loaded': '无法加载流 {stream_mode}',
	'stream_not_supported': '不支持的串流',
	'job_created': '任务 {job_id} 已添加',
	'job_not_created': '任务 {job_id} 尚未添加',
	'job_submitted': '任务 {job_id} 已提交',
	'job_not_submitted': '任务 {job_id} 未提交',
	'job_all_submitted': '任务组已提交',
	'job_all_not_submitted': '任务组尚未提交',
	'job_deleted': '任务 {job_id} 已删除',
	'job_not_deleted': '任务 {job_id} 尚未删除',
	'job_all_deleted': '任务组已删除',
	'job_all_not_deleted': '任务组尚未删除',
	'job_step_added': '已将步骤添加至任务 {job_id}',
	'job_step_not_added': '步骤尚未添加至任务 {job_id}',
	'job_remix_step_added': '已将任务 {job_id} 重混入步骤 {step_index}',
	'job_remix_step_not_added': '任务 {job_id} 尚未重混入步骤 {step_index}',
	'job_step_inserted': '已将步骤 {step_index} 插入任务 {job_id}',
	'job_step_not_inserted': '步骤 {step_index} 尚未插入任务 {job_id}',
	'job_step_removed': '已从任务 {job_id} 中移除了步骤 {step_index}',
	'job_step_not_removed': '任务 {job_id} 中的步骤 {step_index} 尚未被移除',
	'running_job': '正在运行队列的任务 {job_id}',
	'running_jobs': '正在运行所有队列的任务',
	'retrying_job': '正在重试失败的任务 {job_id}',
	'retrying_jobs': '正在重试所有失败的任务',
	'processing_job_succeed': '任务 {job_id} 处理成功',
	'processing_jobs_succeed': '所有任务均处理成功',
	'processing_job_failed': '任务 {job_id} 处理失败',
	'processing_jobs_failed': '所有任务均处理失败',
	'processing_step': '正在处理第 {step_current} 步，共 {step_total} 步',
	'validating_hash_succeed': '验证文件 {hash_file_name} 的哈希值成功',
	'validating_hash_failed': '验证文件 {hash_file_name} 的哈希值失败',
	'validating_source_succeed': '验证原始文件 {source_file_name} 成功',
	'validating_source_failed': '验证原始文件 {source_file_name} 失败',
	'deleting_corrupt_source': '正在删除损坏的原始文件 {source_file_name}',
	'time_ago_now': '刚刚',
	'time_ago_minutes': '{minutes} 分钟前',
	'time_ago_hours': '{hours} 时 {minutes} 分前',
	'time_ago_days': '{days} 天 {hours} 时 {minutes} 分前',
	'point': '。',
	'comma': '，',
	'colon': '：',
	'question_mark': '？',
	'exclamation_mark': '！',
	'help':
	{
		# installer
		'install_dependency': 'choose the variant of {dependency} to install',
		'skip_conda': 'skip the conda environment check',
		# paths
		'config_path': 'choose the config file to override defaults',
		'temp_path': 'specify the directory for the temporary resources',
		'jobs_path': 'specify the directory to store jobs',
		'source_paths': 'choose the image or audio paths',
		'target_path': 'choose the image or video path',
		'output_path': 'specify the image or video within a directory',
		# patterns
		'source_pattern': 'choose the image or audio pattern',
		'target_pattern': 'choose the image or video pattern',
		'output_pattern': 'specify the image or video pattern',
		# face detector
		'face_detector_model': 'choose the model responsible for detecting the faces',
		'face_detector_size': 'specify the frame size provided to the face detector',
		'face_detector_angles': 'specify the angles to rotate the frame before detecting faces',
		'face_detector_score': 'filter the detected faces base on the confidence score',
		# face landmarker
		'face_landmarker_model': 'choose the model responsible for detecting the face landmarks',
		'face_landmarker_score': 'filter the detected face landmarks base on the confidence score',
		# face selector
		'face_selector_mode': 'use reference based tracking or simple matching',
		'face_selector_order': 'specify the order of the detected faces',
		'face_selector_age_start': 'filter the detected faces based the starting age',
		'face_selector_age_end': 'filter the detected faces based the ending age',
		'face_selector_gender': 'filter the detected faces based on their gender',
		'face_selector_race': 'filter the detected faces based on their race',
		'reference_face_position': 'specify the position used to create the reference face',
		'reference_face_distance': 'specify the similarity between the reference face and target face',
		'reference_frame_number': 'specify the frame used to create the reference face',
		# face masker
		'face_occluder_model': 'choose the model responsible for the occlusion mask',
		'face_parser_model': 'choose the model responsible for the region mask',
		'face_mask_types': 'mix and match different face mask types (choices: {choices})',
		'face_mask_blur': 'specify the degree of blur applied to the box mask',
		'face_mask_padding': 'apply top, right, bottom and left padding to the box mask',
		'face_mask_regions': 'choose the facial features used for the region mask (choices: {choices})',
		# frame extraction
		'trim_frame_start': 'specify the starting frame of the target video',
		'trim_frame_end': 'specify the ending frame of the target video',
		'temp_frame_format': 'specify the temporary resources format',
		'keep_temp': 'keep the temporary resources after processing',
		# output creation
		'output_image_quality': 'specify the image quality which translates to the image compression',
		'output_image_resolution': 'specify the image resolution based on the target image',
		'output_audio_encoder': 'specify the encoder used for the audio',
		'output_audio_quality': 'specify the audio quality which translates to the audio compression',
		'output_audio_volume': 'specify the audio volume based on the target video',
		'output_video_encoder': 'specify the encoder used for the video',
		'output_video_preset': 'balance fast video processing and video file size',
		'output_video_quality': 'specify the video quality which translates to the video compression',
		'output_video_resolution': 'specify the video resolution based on the target video',
		'output_video_fps': 'specify the video fps based on the target video',
		# processors
		'processors': 'load a single or multiple processors (choices: {choices}, ...)',
		'age_modifier_model': 'choose the model responsible for aging the face',
		'age_modifier_direction': 'specify the direction in which the age should be modified',
		'deep_swapper_model': 'choose the model responsible for swapping the face',
		'deep_swapper_morph': 'morph between source face and target faces',
		'expression_restorer_model': 'choose the model responsible for restoring the expression',
		'expression_restorer_factor': 'restore factor of expression from the target face',
		'face_debugger_items': 'load a single or multiple processors (choices: {choices})',
		'face_editor_model': 'choose the model responsible for editing the face',
		'face_editor_eyebrow_direction': 'specify the eyebrow direction',
		'face_editor_eye_gaze_horizontal': 'specify the horizontal eye gaze',
		'face_editor_eye_gaze_vertical': 'specify the vertical eye gaze',
		'face_editor_eye_open_ratio': 'specify the ratio of eye opening',
		'face_editor_lip_open_ratio': 'specify the ratio of lip opening',
		'face_editor_mouth_grim': 'specify the mouth grim',
		'face_editor_mouth_pout': 'specify the mouth pout',
		'face_editor_mouth_purse': 'specify the mouth purse',
		'face_editor_mouth_smile': 'specify the mouth smile',
		'face_editor_mouth_position_horizontal': 'specify the horizontal mouth position',
		'face_editor_mouth_position_vertical': 'specify the vertical mouth position',
		'face_editor_head_pitch': 'specify the head pitch',
		'face_editor_head_yaw': 'specify the head yaw',
		'face_editor_head_roll': 'specify the head roll',
		'face_enhancer_model': 'choose the model responsible for enhancing the face',
		'face_enhancer_blend': 'blend the enhanced into the previous face',
		'face_enhancer_weight': 'specify the degree of weight applied to the face',
		'face_swapper_model': 'choose the model responsible for swapping the face',
		'face_swapper_pixel_boost': 'choose the pixel boost resolution for the face swapper',
		'frame_colorizer_model': 'choose the model responsible for colorizing the frame',
		'frame_colorizer_size': 'specify the frame size provided to the frame colorizer',
		'frame_colorizer_blend': 'blend the colorized into the previous frame',
		'frame_enhancer_model': 'choose the model responsible for enhancing the frame',
		'frame_enhancer_blend': 'blend the enhanced into the previous frame',
		'lip_syncer_model': 'choose the model responsible for syncing the lips',
		# uis
		'open_browser': 'open the browser once the program is ready',
		'ui_layouts': 'launch a single or multiple UI layouts (choices: {choices}, ...)',
		'ui_workflow': 'choose the ui workflow',
		# execution
		'execution_device_id': 'specify the device used for processing',
		'execution_providers': 'inference using different providers (choices: {choices}, ...)',
		'execution_thread_count': 'specify the amount of parallel threads while processing',
		'execution_queue_count': 'specify the amount of frames each thread is processing',
		# download
		'download_providers': 'download using different providers (choices: {choices}, ...)',
		'download_scope': 'specify the download scope',
		# memory
		'video_memory_strategy': 'balance fast processing and low VRAM usage',
		'system_memory_limit': 'limit the available RAM that can be used while processing',
		# misc
		'log_level': 'adjust the message severity displayed in the terminal',
		'halt_on_error': 'halt the program once an error occurred',
		# run
		'run': 'run the program',
		'headless_run': 'run the program in headless mode',
		'batch_run': 'run the program in batch mode',
		'force_download': 'force automate downloads and exit',
		# jobs
		'job_id': 'specify the job id',
		'job_status': 'specify the job status',
		'step_index': 'specify the step index',
		# job manager
		'job_list': 'list jobs by status',
		'job_create': 'create a drafted job',
		'job_submit': 'submit a drafted job to become a queued job',
		'job_submit_all': 'submit all drafted jobs to become a queued jobs',
		'job_delete': 'delete a drafted, queued, failed or completed job',
		'job_delete_all': 'delete all drafted, queued, failed and completed jobs',
		'job_add_step': 'add a step to a drafted job',
		'job_remix_step': 'remix a previous step from a drafted job',
		'job_insert_step': 'insert a step to a drafted job',
		'job_remove_step': 'remove a step from a drafted job',
		# job runner
		'job_run': 'run a queued job',
		'job_run_all': 'run all queued jobs',
		'job_retry': 'retry a failed job',
		'job_retry_all': 'retry all failed jobs'
	},
	'about':
	{
		'become_a_member': '加入我们',
		'join_our_community': '加入我们的社区',
		'read_the_documentation': '阅读文档'
	},
	'uis':
	{
		'age_modifier_direction_slider': '年龄修改',
		'age_modifier_model_dropdown': '年龄修改模型',
		'apply_button': '应用',
		'benchmark_cycles_slider': '基准测试周期',
		'benchmark_runs_checkbox_group': '基准测试运行',
		'clear_button': '清除',
		'common_options_checkbox_group': '通用选项',
		'download_providers_checkbox_group': '模型来源',
		'deep_swapper_model_dropdown': '深度交换模型',
		'deep_swapper_morph_slider': '深度交换变形',
		'execution_providers_checkbox_group': '加速器',
		'execution_queue_count_slider': '任务队列数',
		'execution_thread_count_slider': '模型线程数',
		'expression_restorer_factor_slider': '表情恢复系数',
		'expression_restorer_model_dropdown': '表情恢复模型',
		'face_debugger_items_checkbox_group': '面部调试',
		'face_detector_angles_checkbox_group': '面部检测角度',
		'face_detector_model_dropdown': '面部检测模型',
		'face_detector_score_slider': '面部检测得分',
		'face_detector_size_dropdown': '面部检测尺寸',
		'face_editor_eyebrow_direction_slider': '面部编辑眉毛方向',
		'face_editor_eye_gaze_horizontal_slider': '面部编辑水平视线',
		'face_editor_eye_gaze_vertical_slider': '面部编辑垂直视线',
		'face_editor_eye_open_ratio_slider': '面部编辑眼睛开合率',
		'face_editor_head_pitch_slider': '面部编辑头部俯仰',
		'face_editor_head_roll_slider': '面部编辑头部滚转',
		'face_editor_head_yaw_slider': '面部编辑头部偏航',
		'face_editor_lip_open_ratio_slider': '面部编辑嘴唇开合率',
		'face_editor_model_dropdown': '面部编辑模型',
		'face_editor_mouth_grim_slider': '面部编辑嘴部紧绷',
		'face_editor_mouth_position_horizontal_slider': '面部编辑嘴巴水平位置',
		'face_editor_mouth_position_vertical_slider': '面部编辑嘴巴垂直位置',
		'face_editor_mouth_pout_slider': '面部编辑嘴部嘟起',
		'face_editor_mouth_purse_slider': '面部编辑嘴部抿起',
		'face_editor_mouth_smile_slider': '面部编辑嘴巴微笑',
		'face_enhancer_blend_slider': '面部增强混合',
		'face_enhancer_model_dropdown': '面部增强模型',
		'face_enhancer_weight_slider': '面部增强权重',
		'face_landmarker_model_dropdown': '面部标记模型',
		'face_landmarker_score_slider': '面部标记得分',
		'face_mask_blur_slider': '面部遮罩模糊度',
		'face_mask_padding_bottom_slider': '面部遮罩底部填充',
		'face_mask_padding_left_slider': '面部遮罩左侧填充',
		'face_mask_padding_right_slider': '面部遮罩右侧填充',
		'face_mask_padding_top_slider': '面部遮罩顶部填充',
		'face_mask_regions_checkbox_group': '面部遮罩区域',
		'face_mask_types_checkbox_group': '面部遮罩类型',
		'face_selector_age_range_slider': '面部选择年龄范围',
		'face_selector_gender_dropdown': '面部选择性别',
		'face_selector_mode_dropdown': '面部选择模式',
		'face_selector_order_dropdown': '面部选择顺序',
		'face_selector_race_dropdown': '面部选择种族',
		'face_swapper_model_dropdown': '面部交换模型',
		'face_swapper_pixel_boost_dropdown': '面部交换像素增强',
		'face_occluder_model_dropdown': '面部遮挡模型',
		'face_parser_model_dropdown': '面部解析器模型',
		'frame_colorizer_blend_slider': '帧着色混合',
		'frame_colorizer_model_dropdown': '帧着色模型',
		'frame_colorizer_size_dropdown': '帧着色尺寸',
		'frame_enhancer_blend_slider': '帧增强混合',
		'frame_enhancer_model_dropdown': '帧增强模型',
		'job_list_status_checkbox_group': '任务状态',
		'job_manager_job_action_dropdown': '任务管理器动作',
		'job_manager_job_id_dropdown': '任务 ID',
		'job_manager_step_index_dropdown': '步骤索引',
		'job_runner_job_action_dropdown': '任务运行器动作',
		'job_runner_job_id_dropdown': '任务 ID',
		'lip_syncer_model_dropdown': '唇同步模型',
		'log_level_dropdown': '日志级别',
		'output_audio_encoder_dropdown': '输出音频编码器',
		'output_audio_quality_slider': '输出音频质量',
		'output_audio_volume_slider': '输出音频音量',
		'output_image_or_video': '输出',
		'output_image_quality_slider': '输出图像质量',
		'output_image_resolution_dropdown': '输出图像分辨率',
		'output_path_textbox': '输出路径',
		'output_video_encoder_dropdown': '输出视频编码器',
		'output_video_fps_slider': '输出视频帧率',
		'output_video_preset_dropdown': '输出视频预设',
		'output_video_quality_slider': '输出视频质量',
		'output_video_resolution_dropdown': '输出视频分辨率',
		'preview_frame_slider': '预览帧',
		'preview_image': '预览',
		'processors_checkbox_group': '特效',
		'reference_face_distance_slider': '参考面部距离',
		'reference_face_gallery': '参考面部',
		'refresh_button': '刷新',
		'source_file': '原始文件',
		'start_button': '开始',
		'stop_button': '停止',
		'system_memory_limit_slider': '系统内存限制',
		'target_file': '目标文件',
		'temp_frame_format_dropdown': '临时帧格式',
		'terminal_textbox': '终端',
		'trim_frame_slider': '修剪帧',
		'ui_workflow': '任务管理',
		'video_memory_strategy_dropdown': '显存策略',
		'webcam_fps_slider': '摄像头帧率',
		'webcam_image': '摄像头图像',
		'webcam_device_id_dropdown': '摄像头ID',
		'webcam_mode_radio': '摄像头模式',
		'webcam_resolution_dropdown': '摄像头分辨率'
	}
}


def get(notation : str) -> Optional[str]:
	current = WORDING

	for fragment in notation.split('.'):
		if fragment in current:
			current = current.get(fragment)
			if isinstance(current, str):
				return current

	return None
